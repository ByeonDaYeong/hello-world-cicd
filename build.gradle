plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.cloud.tools.jib' version "3.3.2"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'software.amazon.awssdk:s3:2.20.26'
    implementation 'software.amazon.awssdk:core:2.20.26'

}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
    compilerOptions {
        freeCompilerArgs.set(["-Xjsr305=strict"])
    }
}

jib {
    from {
        image = "eclipse-temurin:17-jre" // JDK를 배포하는 오픈소스 프로젝트 이름
    }
    to {
        image = "summer1012/hello-world-app:latest" // Docker Hub 이미지 경로
        auth {
            username = System.getenv("DOCKER_USERNAME") ?: "summer1012"
            password = System.getenv("DOCKER_PASSWORD") ?: "@@qweqwe11"
        }
    }
    container {
        ports = ["8080"] // 컨테이너에서 노출할 포트
        mainClass = "com.example.helloworld.HelloWorldApplicationKt" // Kotlin의 메인 클래스 경로
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
